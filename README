Manual Work (management console aka build-agent): 
    1. Create a ec2 instance calls "management console" this is where we will host our tf code 
    2. In the "management console" as ec2-user run: 
        - sudo dnf install git -y 
        - git clone https://github.com/surferdudeken/weather-app.git
        - chmod 777 weather-app/package_dep.sh weather-app/initial_setup.sh
        - run ./weather-app/package_dep.sh (installs dependecies needed)
        - After completing the "aws configure" step 
        - Run weather-app/initial_setup.sh (Will setup jenkins in the eks cluster)
            - Save the output of the load balancer ip and password 
 Jenkins agent set up: 
    1. Jenkins build agent (in our case it's the managment console where our bash scripts were ran)
    2. Go to Dashboard > Manage Jenkins > Credenetials > System > Global Credentials > Select "Add Credentials"
                                                                                       kind: SSH username with private key
                                                                                       Description: ec2-user
                                                                                       Username: ec2-user
                                                                                       Private Key > Enter Directly > copy and paste the private key you created for you ec2 instance 
                                                                                                        managment console aka build-agent

    3. Go to Dashboard > Manage Jenkins > Credenetials > System > Global Credentials > Select "Add Credentials"
                                                                                       kind: username and password
                                                                                       Description: dockerhub-creds
                                                                                       Username: kabaker
                                                                                       password: Asdf_123
                                                                                       ID: dockerhub-creds
                                                                                       
    4. Go to Dashboard > Manage Jenkins > Select "New Node"  > type "build-agent" 
                                                               enter root directory "/home/ec2-user" 
                                                               Launch method: "Launch agents via SSH" 
                                                               Host: Public Ip of the managent console aka build-agent
                                                               Credentials: ec2-user
                                                               Host Key Verification Strategy: Non verifyiing Verification Strategy

    5. S3 bucket setup for terraform: 
           1. Setup a s3 bucket named "s3tfstateohio" or use local machine 
              edit the main.tf file as needed: 
                terraform {
                backend "s3" {
                    bucket = "s3tfstateohio"
                    key    = "weather-microservice.tfstate"
                    region = "us-east-2"
                }
                }
- Resources: 
    - https://registry.terraform.io/modules/terraform-aws-modules/eks/aws/latest
    - https://api.open-meteo.com/v1/forecast?latitude=38.8951&longitude=-77.0364&daily=temperature_2m_max,temperature_2m_min,precipitation_sum&temperature_unit=fahrenheit&windspeed_unit=mph&precipitation_unit=inch&timezone=GMT'
    - https://www.fullstackpython.com/flask-json-jsonify-examples.html
    - https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs/data-sources/storage_class
    - https://registry.terraform.io/providers/hashicorp/kubernetes/latest/docs
    - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster
    - https://stackoverflow.com/questions/1117398/java-home-directory-in-linux
    - https://kubernetes.io/docs/reference/kubectl/#output-options
    - https://kubernetes.io/docs/reference/kubectl/cheatsheet/
